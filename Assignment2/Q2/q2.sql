connect to cs421;
CREATE TABLE user (user_id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1), username VARCHAR(50) UNIQUE NOT NULL, name VARCHAR(50) NOT NULL, password VARCHAR(191) NOT NULL, role VARCHAR(10) NOT NULL, CHECK (role='admin' OR role='user') );
CREATE TABLE message (message_id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1), text VARCHAR(500) NOT NULL, owner_id INTEGER NOT NULL, FOREIGN KEY (owner_id) REFERENCES user (user_id) );
CREATE TABLE receives (message_id INTEGER NOT NULL, user_id INTEGER NOT NULL, PRIMARY KEY (message_id, user_id), FOREIGN KEY (message_id) REFERENCES message (message_id), FOREIGN KEY (user_id) REFERENCES user (user_id) );
CREATE TABLE alert (message_id INTEGER NOT NULL PRIMARY KEY, FOREIGN KEY (message_id) REFERENCES message (message_id), type VARCHAR(7) NOT NULL, CHECK (type='success' OR type='info' OR type='warning' OR type='danger') );
CREATE TABLE notifies (message_id INTEGER NOT NULL, user_id INTEGER NOT NULL, is_dismissed SMALLINT NOT NULL, CHECK (is_dismissed=0 OR is_dismissed=1), PRIMARY KEY (message_id, user_id), FOREIGN KEY (message_id) REFERENCES message (message_id), FOREIGN KEY (user_id) REFERENCES user (user_id) );
CREATE TABLE page (page_id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1), title VARCHAR(200) NOT NULL, is_public SMALLINT NOT NULL, owner_id INTEGER NOT NULL, FOREIGN KEY (owner_id) REFERENCES user (user_id), CHECK (is_public=0 OR is_public=1) );
CREATE TABLE viewable_by (page_id INTEGER NOT NULL, user_id INTEGER NOT NULL, PRIMARY KEY (page_id, user_id), FOREIGN KEY (page_id) REFERENCES page (page_id), FOREIGN KEY (user_id) REFERENCES user (user_id) );
CREATE TABLE comment (comment_id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1), text VARCHAR(200) NOT NULL, page_id INTEGER NOT NULL, FOREIGN KEY (page_id) REFERENCES page (page_id), owner_id INTEGER NOT NULL, FOREIGN KEY (owner_id) REFERENCES user (user_id) );
CREATE TABLE menu_item (menu_item_id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1), text VARCHAR(200) NOT NULL, url VARCHAR(200) NOT NULL );
CREATE TABLE menu_item_configuration (config_id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1), padding INTEGER NOT NULL, background_colour VARCHAR(20) NOT NULL, text_colour VARCHAR(20) NOT NULL );
CREATE TABLE page_menu (page_id INTEGER NOT NULL, FOREIGN KEY (page_id) REFERENCES page (page_id), menu_item_id INTEGER NOT NULL, FOREIGN KEY (menu_item_id) REFERENCES menu_item (menu_item_id), config_id INTEGER NOT NULL, FOREIGN KEY (config_id) REFERENCES menu_item_configuration (config_id), index INTEGER NOT NULL, PRIMARY KEY (page_id, menu_item_id, config_id) );
CREATE TABLE content (page_id INTEGER NOT NULL, FOREIGN KEY (page_id) REFERENCES page (page_id), index INTEGER NOT NULL, styling VARCHAR(7) NOT NULL, type VARCHAR(7) NOT NULL, content CLOB NOT NULL, PRIMARY KEY (page_id, index), CHECK (styling='airy' OR styling='compact') );
